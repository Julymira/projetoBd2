/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bd2.View;

import com.mycompany.bd2.DTO.CompararDTO;
import com.mycompany.bd2.DTO.ObjetoDto;
import com.mycompany.bd2.DTO.ResultadoDto;
import com.mycompany.bd2.View.Alterar.AlterarComparacao;
import com.mycompany.bd2.dao.CompararDao;
import com.mycompany.bd2.dao.ObjetoDao;
import com.mycompany.bd2.dao.ResultadoDao;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 * @author Julyana Mira
 */
public class Resultado extends javax.swing.JFrame {
    private int id;

    /**
     * Creates new form Resultado
     */
    public Resultado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        RecarregarBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "codigo", "nome", "resultado"
                }
        ));
        jScrollPane2.setViewportView(tabela);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Alterar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        RecarregarBtn.setBackground(new java.awt.Color(0, 0, 0));
        RecarregarBtn.setForeground(new java.awt.Color(255, 255, 255));
        RecarregarBtn.setText("Recarregar");
        RecarregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecarregarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(48, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButton2)
                                .addGap(81, 81, 81)
                                .addComponent(RecarregarBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(50, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jButton2)
                                                .addComponent(RecarregarBtn)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RecarregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecarregarBtnActionPerformed
        listarValores();
    }//GEN-LAST:event_RecarregarBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            AlterarComparacao comparacao = new AlterarComparacao();

            comparacao.setId(pegarId().getId());
            comparacao.setIdFk(pegarId().getIdobjComparacao());
            comparacao.getNota1Txt().setText(String.valueOf(pegarId().getObj1Nota()));
            comparacao.getNota2Txt().setText(String.valueOf(pegarId().getObj2Nota()));
            comparacao.getNota3Txt().setText(String.valueOf(pegarId().getObj3Nota3()));
            comparacao.getPeso1Txt().setText(String.valueOf(pegarId().getObj1Peso()));
            comparacao.getPeso2Txt().setText(String.valueOf(pegarId().getObj2Peso()));
            comparacao.getPeso3Txt().setText(String.valueOf(pegarId().getObj3Peso3()));
            comparacao.setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "clique no valor que queira  alterar!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            CompararDao dao = new CompararDao();
            dao.deletarObjeto(pegarId());
            listarValores();
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "clique no valor que queira remover");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RecarregarBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    private void listarValores() {
        ResultadoDao dao = new ResultadoDao();
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        model.setNumRows(0);
        ArrayList<ResultadoDto> lista = dao.getAll();
        for (int i = 0; i < lista.size(); i++) {
            model.addRow(new Object[]{
                    lista.get(i).getId(),
                    lista.get(i).getNome(),
                    lista.get(i).getResultado()
            });
        }
    }

    private void carregarTabela() {
        int setar = tabela.getSelectedRow();
        this.id = (int) tabela.getModel().getValueAt(setar, 0);
    }

    public CompararDTO pegarId() {
        CompararDao dao = new CompararDao();
        carregarTabela();
        return dao.findById(id);
    }
}
